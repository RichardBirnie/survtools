% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation.R
\name{ggsurvplot2}
\alias{ggsurvplot2}
\title{Plot Kaplan-Meier curves with a corresponding table of numbers at risk and
overlay parametric survival curves if required}
\usage{
ggsurvplot2(fit, psm.curves = NULL, xval = "time", yval = "est",
  groups = "group", ...)
}
\arguments{
\item{fit}{A survfit object containing the Kaplan-Meier estimate of the
survival function as returned by \code{\link[survival]{survfit}}}

\item{psm.curves}{List. Each element of the list is a data frame containing
survival estimates from a parametric survival model as returned by
summary.flexsurv. The list must be named. Names should be the distribution
used for the survival analysis, e.g. weibull. See example below}

\item{xval}{column name that contains x values (time)}

\item{yval}{column name that contains y values (survival probability)}

\item{groups}{column name that contains groups in your data. e.g. treatment arm.}

\item{...}{Additional arguments to be passed to
\code{\link[survminer]{ggsurvplot}}}
}
\value{
An object of class "ggsurvplot" "list". This is essentially a list
  with two elements. The first element is the plot the second element is the
  table of number at risk. Both can be extracted and modified using ggplot2
  if required.
}
\description{
This function extends \code{\link[survminer]{ggsurvplot}} from the survminer
package to allow parametric survival curves to be overlaid on the
Kaplan-Meier curve. If only the Kaplan-Meier curve is required it may be
preferable to use ggsurvplot directly
}
\examples{
library(survival)
library(survminer)
library(flexsurv)
library(dplyr)
library(survtools)

#create custom colours
BM.blue = rgb(69, 185, 209, max=255)
BM.red = rgb(225, 55, 60, max=255)
BM.yellow = rgb(238, 224, 30, max=255)
BM.pink=rgb(211,78,147,max=255)
BM.Dblue=rgb(0,45,92,max=255)
BM.Dyellow = rgb(214, 200, 16, max=255)

#load some example data from the flexsurv package
#Survival times of 686 patients with primary node positive breast cancer
#censrec = censoring, 1 = dead, 0 = censored
#rectime = time of death or censoring in days
#recyrs = time of death or censoring in years
#group = prognostic group
data(bc)

#create a survival object
surv.obj <- Surv(recyrs, censrec) ~ group

# Basic Kaplan-Meier curves -----------------------------------------------
#simple Kaplan-Meier estimate
surv.km <- survfit(surv.obj, data = bc)

#Plot basic Kaplan-Meier curves without any parametric curves
km.fig <- ggsurvplot2(km = surv.km, xval = 'time', yval = 'est',
                      groups = 'prognosis', plot.title = 'Breast Cancer Prognosis',
                      x.limit = c(0, 7.5), title.legend = 'Prognosis',
                      labs.legend =  c('Good KM', 'Medium KM', 'Poor KM'),
                      cols = c(BM.red, BM.blue, BM.pink)
)

# Fit parametric survival models -------------------------------------------
#fit a Weibull model and get the fitted survival curve
#in a format suitable for plotting with ggplot
surv.wb <- flexsurvreg(surv.obj, data = bc, dist = 'weibull')
surv.wb.summ <- summary(surv.wb, type = 'survival', tidy = TRUE)
surv.wb.summ$prognosis <- paste(surv.wb.summ$group, 'Weibull')

#fit an exponential model and get the fitted survival curve
#in a format suitable for plotting with ggplot
surv.exp <- flexsurvreg(surv.obj, data = bc, dist = 'exp')
surv.exp.summ <- summary(surv.exp, type = 'survival', tidy = TRUE)
surv.exp.summ$prognosis <- paste(surv.exp.summ$group, 'Exponential')

# Overlay parametric curves on Kaplan-Meier -------------------------------
#put all the parametric survival results in a list
#Each element of the list a data frame with the results of the corresponding model
psm = list('Weibull' = surv.wb.summ, 'Exponential' = surv.exp.summ)

#plot the results
#The base layer of the plot is the Kaplan Meier curve. The parametric curves are
#added as extra layers on top. This should work of any number of additional curves
#Pay attention to the l.type, cols and labs.legend arguments. These need to be specified in
#the order that you expect them to appear in the figure legend
surv.fig <- ggsurvplot2(km = surv.km, psm.curves = psm, xval = 'time', yval = 'est',
                        groups = 'prognosis', plot.title = 'Breast Cancer Prognosis', x.limit = c(0, 7.5),
                        l.type = rep(c(2, 1, 3), length(psm)+1), title.legend = 'Prognosis',
                        labs.legend =  c('Good KM', 'Medium KM', 'Poor KM'),
                        cols = c(rep(BM.red, length(psm)+1), rep(BM.blue, length(psm)+1), rep(BM.Dblue, length(psm)+1))
                       )
surv.fig


# Cumulative Hazard plots -------------------------------------------------
# Example cumulative hazard plot ------------------------------------------
#Get cumulative hazards for the weibull model
chaz.wb.summ <- summary(surv.wb, type = 'cumhaz')

#rearrange the Weibull results into a format suitable for ggplot
names(chaz.wb.summ) <- gsub('group=', '', names(chaz.wb.summ))
n.temp <- names(chaz.wb.summ)
wb.chaz <- lapply(names(chaz.wb.summ), function(name) {
  chaz.wb.summ[[name]]$prognosis <- paste(name, 'Weibull')
  chaz.wb.summ[[name]]
})
names(wb.chaz) <- n.temp
wb.chaz <- bind_rows(wb.chaz)

#Get cumulative hazards for the weibull model
chaz.exp.summ <- summary(surv.exp, type = 'cumhaz')

#rearrange the exponential results into a format suitable for ggplot
names(chaz.exp.summ) <- gsub('group=', '', names(chaz.exp.summ))
n.temp <- names(chaz.exp.summ)
exp.chaz <- lapply(names(chaz.exp.summ), function(name) {
  chaz.exp.summ[[name]]$prognosis <- paste(name, 'Exponential')
  chaz.exp.summ[[name]]
})
names(exp.chaz) <- n.temp
exp.chaz <- bind_rows(exp.chaz)

psm.chaz <- list('Weibull' = wb.chaz, 'Exponential' = exp.chaz)

#calculate minimum time for x-axis
chaz.fig <- ggsurvplot2(surv.km, psm.curves = psm.chaz, fun = 'cumhaz', xval = 'time', yval = 'est', groups = 'prognosis',
                        plot.title = 'Cumulative Hazard', time.scale = 'log', time.interval = 1, show.table = TRUE, table.height = 0.2,
                        table.title = 'Number at risk', title.legend = 'Prognosis', labs.legend =  c('Good KM', 'Medium KM', 'Poor KM'),
                        l.type = rep(c(2, 1, 3), length(psm.chaz)+1), x.limit = c(0.1, 7.5), x.label = 'Log Time (Years)',
                        cols = c(rep(BM.red, length(psm.chaz)+1), rep(BM.blue, length(psm.chaz)+1), rep(BM.Dblue, length(psm.chaz)+1)))
chaz.fig
}
\seealso{
\code{\link[survminer]{ggsurvplot}}
}
