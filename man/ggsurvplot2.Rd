% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation.R
\name{ggsurvplot2}
\alias{ggsurvplot2}
\title{Plot Kaplan-Meier curves with a corresponding table of numbers at risk and
overlay parametric survival curves if required}
\usage{
ggsurvplot2(km, psm.curves, cen = FALSE, xval, yval, groups,
  plot.title = "", time.interval = 1, time.scale = "linear",
  show.table = TRUE, table.height = 0.2, table.title = "Number at risk",
  title.legend = "", labs.legend, l.type, x.limit, x.label = "Time (Years)",
  cols = "hue", ...)
}
\arguments{
\item{km}{A survfit object containing the Kaplan-Meier estimate of the
survival function as returned by \code{\link[survival]{survfit}}}

\item{psm.curves}{List. Each element of the list is a data frame containing
results from a parametric survival model. See example below}

\item{cen}{logical TRUE/FALSE. Should censoring points be shown on the curve. Default = FALSE}

\item{xval}{column name that contains x values (time)}

\item{yval}{column name that contains y values (survival probability)}

\item{groups}{column name that contains groups in your data.}

\item{plot.title}{Character. Text to be used as the main plot title}

\item{time.interval}{Integer. A numbe specifying the preferred time intervals
on the x-axis. Default = 1 year}

\item{time.scale}{Character. This defines the scale of the time axis. Default
= 'linear'. The alternative is 'log' to plot on a log time scale}

\item{show.table}{Logical TRUE/FALSE. If the table of numbers at risk is
required set this to TRUE, if not set this to FALSE. Default = TRUE}

\item{table.height}{Numeric. This controls the height of the number at risk table}

\item{table.title}{Character. Text to be used as the table title}

\item{title.legend}{Character Text to be used as the legend title. This is blank by default}

\item{labs.legend}{Character vector to be used as labels for each item in the
legend. The length of the vector shoud match the numbe of groups in your
data}

\item{x.limit}{A numeric vector of length 2 that specifies the range of the
x-axis.}

\item{x.label}{Character. Text to be used as the label on the x-axis. Default =
Time (Years)}

\item{...}{Additional arguments to be passed to \code{\link[survminer]{ggsurvplot}}}

\item{fun}{This is passed directly to the fun argument of
\code{\link[survminer]{ggsurvplot}}. The default is to plot the survival
curve. Set this to 'cumhaz' if you want the cumulative hazard function.}

\item{linetype}{A vector of linetypes for each curve in the plot}
}
\value{
An object of class "ggsurvplot" "list". This is essentially a list
  with two elements. The first element is the plot the second element is the
  table of number at risk. Both can be extracted and modified using ggplot2
  if required.
}
\description{
This function extends \code{\link[survminer]{ggsurvplot}} from the survminer
package to allow parametric survival curves to be overlaid on the
Kaplan-Meier curve. If only the Kaplan-Meier curve is required it may be
preferable to use ggsurvplot directly
}
\examples{
library(survival)
library(survminer)
library(flexsurv)
library(dplyr)
library(survtools)

#create custom colours
BM.blue = rgb(69, 185, 209, max=255)
BM.red = rgb(225, 55, 60, max=255)
BM.yellow = rgb(238, 224, 30, max=255)
BM.pink=rgb(211,78,147,max=255)
BM.Dblue=rgb(0,45,92,max=255)
BM.Dyellow = rgb(214, 200, 16, max=255)

#load some example data from the flexsurv package
#Survival times of 686 patients with primary node positive breast cancer
#censrec = censoring, 1 = dead, 0 = censored
#rectime = time of death or censoring in days
#recyrs = time of death or censoring in years
#group = prognostic group
data(bc)

#create a survival object
surv.obj <- Surv(recyrs, censrec) ~ group

#simple Kaplan-Meier estimate
surv.km <- survfit(surv.obj, data = bc)

#fit a Weibull model and get the fitted survival curve
surv.wb <- flexsurvreg(surv.obj, data = bc, dist = 'weibull')
surv.wb.summ <- summary(surv.wb, type = 'survival')

#rearrange the Weibull survival results into a format suitable for ggplot
names(surv.wb.summ) <- gsub('group=', '', names(surv.wb.summ))
n.temp <- names(surv.wb.summ)
wb.surv <- lapply(names(surv.wb.summ), function(name) {
  surv.wb.summ[[name]]$prognosis <- paste(name, 'Weibull')
  surv.wb.summ[[name]]
})
names(wb.surv) <- n.temp
wb.surv <- bind_rows(wb.surv)

#fit an exponential model and get the fitted survival curve
surv.exp <- flexsurvreg(surv.obj, data = bc, dist = 'exp')
surv.exp.summ <- summary(surv.exp, type = 'survival')

#rearrange the exponential survival results into a format suitable for ggplot
names(surv.exp.summ) <- gsub('group=', '', names(surv.exp.summ))
n.temp <- names(surv.exp.summ)
exp.surv <- lapply(names(surv.exp.summ), function(name) {
  surv.exp.summ[[name]]$prognosis <- paste(name, 'Exponential')
  surv.exp.summ[[name]]
})
names(exp.surv) <- n.temp
exp.surv <- bind_rows(exp.surv)

#put all the parametric survival results in a list
#Each element of the list a data frame with the results of the corresponding model
psm = list('Weibull' = wb.surv, 'Exponential' = exp.surv)

#plot the results
#The base layer of the plot is the Kaplan Meier curve. The parametric curves are
#added as extra layers on top. This should work of any number of additional curves
#Pay attention to the l.type, cols and labs.legend arguments. These need to be specified in
#the order that you expect them to appear in the figure legend
surv.fig <- ggsurvplot2(km = surv.km, psm.curves = psm, xval = 'time', yval = 'est',
                        groups = 'prognosis', plot.title = 'Breast Cancer Prognosis', x.limit = c(0, 7.5),
                        l.type = rep(c(2, 1, 3), length(psm)+1), title.legend = 'Prognosis',
                        labs.legend =  c('Good KM', 'Medium KM', 'Poor KM'),
                        cols = c(rep(BM.red, length(psm)+1), rep(BM.blue, length(psm)+1), rep(BM.Dblue, length(psm)+1))
                       )
surv.fig
}
\seealso{
\code{\link[survminer]{ggsurvplot}}
}

